#!/bin/bash
set -e
#
if [ "$UID" -ne "0" ]; then
    echo -e "This program must be run as root."
    sleep 2
    exit 0
fi
clear
echo -e "Collecting external ip"
wget -q wtfismyip.com/text -O /root/ip
IP="$(cat /root/ip)"
echo -e "SSH setup?"
  read SSH_SETUP
    if [ "$SSH_SETUP" -ne "no" ]; then
        SSH_CONF=/etc/ssh/sshd_config
        mv "$SSH_CONF" /etc/ssh/sshd_config.bak
        touch "$SSH_CONF"
        echo -e "Please select the new port for ssh (default is 22).\nIt should be a number that is 5 digits."
          read SSH_PORT
            if [[ "$SSH_PORT" -ge "1" || "$SSH_PORT" -le 99999 ]]; then
                echo -e "\nPort $SSH_PORT\n" > "$SSH_CONF"
            else
                echo -e "THAT WAS NOT AN ACCEPTABLE PORT!!!! RE-RUN THE SCRIPT AND PUT SOMETHING SENSIBLE HERE BEFORE YOU LOCK YOURSELF OUT!!"
                exit 0
            fi
        echo -e "Do you want to add an ssh key? (Y/no)"
          read HAVE_KEY
            if [[ "$HAVE_KEY" = "no" ]]; then
                sleep 1
            else
                echo -e "Please paste your public key (beginning with ssh-rsa)."
                  read SSH_KEY
                    if [[ -e /"$USER"/.ssh ]]; then
                        echo -e "\n"$SSH_KEY"" >> /"$USER"/.ssh/authorized_keys
                    else
                        mkdir /"$USER"/.ssh/
                        echo -e "$SSH_KEY" > /"$USER"/.ssh/authorized_keys
                    fi
            fi
        echo -e "\nProtocol 2\n\nHostKey /etc/ssh/ssh_host_rsa_key\n\nHostKey /etc/ssh/ssh_host_dsa_key\n\nHostKey /etc/ssh/ssh_host_ecdsa_key\n\nHostKey /etc/ssh/ssh_host_ed25519_key\n\nUsePrivilegeSeparation yes\n\nKeyRegenerationInterval 3600\n\nServerKeyBits 1024\n\nSyslogFacility AUTH\n\nLogLevel INFO\n\nLoginGraceTime 120\n\nPermitRootLogin yes\n\nStrictModes yes\n\nRSAAuthentication yes\n\nPubkeyAuthentication yes\n\nAuthorizedKeysFile /root/.ssh/authorized_keys\n\nIgnoreRhosts yes\n\nHostbasedAuthentication no\n\nRhostsRSAAuthentication no\nPermitEmptyPasswords no\n\nChallengeResponseAuthentication no\n\nPasswordAuthentication no\n\nKerberosAuthentication no\n\nGSSAPIAuthentication no\n\nX11Forwarding yes\n\nX11DisplayOffset 10\n\nPrintMotd no\n\nPrintLastLog yes\n\nTCPKeepAlive yes\n\nAcceptEnv LANG LC_*\n\nSubsystem sftp /usr/lib/openssh/sftp-server\n\nCiphers aes256-ctr,aes256-cbc,aes128-ctr,aes128-cbc,3des-cbc\n\nUsePAM no" >> "$SSH_CONF"
        mv "$SSH_CONF" /root/temp.sshconf
        sed '/^$/d' /root/temp.sshconf > "$SSH_CONF"
        rm -f /root/temp.sshconf
        chmod 0700 /root/.ssh
        chmod 0600 /root/.ssh/*
        service ssh restart
    fi
apt-get update && apt-get upgrade -y && apt-get dist-upgrade -y
apt-get install -y python-setuptools python-openssl python-leveldb libleveldb-dev
easy_install jsonrpclib irc plyvel
mkdir /root/electrumsrc && cd /root/electrumsrc
git clone https://github.com/spesmilo/electrum-server.git
cd electrum-server
./configure
python setup.py install
cd /home/bitnode
mkdir electrum-server && cd electrum-server
chown -R bitnode /home/bitnode/electrum-server
chown -R bitnode /home/bitnode/electrum-server/*
mkdir ssl && cd ssl
openssl genrsa -aes256 -passout pass:x -out server.pass.key 2048
openssl rsa -passin pass:x -in server.pass.key -out electrum-private.key
rm -rf server.pass.key
openssl req -new -key electrum-private.key -out electrum-server.csr
openssl x509 -req -days 730 -in electrum-server.csr -signkey electrum-private.key -out electrum-server.csr
chown -R bitnode /home/bitnode/electrum-server/ssl
chown -R bitnode /home/bitnode/electrum-server/ssl/*
echo "bitnode hard nofile 65536" >> /etc/security/limits.conf
echo "bitnode soft nofile 65536" >> /etc/security/limits.conf
cat /home/bitnode/.bitcoin/bitcoin.conf | grep "rpcuser" | cut -b 9-
  read RPC_USER
cat /home/bitnode/.bitcoin/bitcoin.conf | grep "rpcpassword" | cut -b 13-
  read RPC_PASSWORD
touch /etc/electrum.conf
echo "\nHidden service? (Y/no)"
  read HS_RELAY
    if [[ "$HS_RELAY" -ne "no" ]]; then
        echo -e "\nHiddenServiceDir /var/lib/tor/electrum-server/\nHiddenServicePort 50001 127.0.0.1:50001\nHiddenServicePort 50002 127.0.0.1:50002"
        echo "nameserver 127.0.0.1" > /etc/resolv.conf
        chattr +i /etc/resolv.conf
        service tor start
        echo -e "\nusername = bitnode\nhost = 127.0.0.1\nelectrum_rpc_port = 8000\nelectrum_tcp_port = 50001\nelectrum_tcp_ssl_port = 50002\nssl_certfile = /home/bitnode/electrum-server/ssl/electrum-server.crt\nssl_keyfile = /home/bitnode/electrum-server/ssl/electrum-privatekey.key\nlogfile = /home/bitnode/electrum-server/electrum.log\npath = /home/bitnode/electrum-server/electrum-fulltree-10000-lastest\npruning_limit = 10000\nbitcoind_host = localhost\nbitcoind_port = 8332\nbitcoind_user = "$RPC_USER"\nbitcoind_password = "$RPC_PASSWORD""
        echo "HS address:"
        cat /var/lib/tor/electrum-server/hostname
        echo "Enter to continue."
          read
    else
        echo -e "\nusername = bitnode\nhost = 0.0.0.0\nelectrum_rpc_port = 8000\nelectrum_tcp_port = 50001\nelectrum_tcp_ssl_port = 50002\nssl_certfile = /home/bitnode/electrum-server/ssl/electrum-server.crt\nssl_keyfile = /home/bitnode/electrum-server/ssl/electrum-privatekey.key\nlogfile = /home/bitnode/electrum-server/electrum.log\npath = /home/bitnode/electrum-server/electrum-fulltree-10000-lastest\npruning_limit = 10000\nbitcoind_host = localhost\nbitcoind_port = 8332\nbitcoind_user = "$RPC_USER"\nbitcoind_password = "$RPC_PASSWORD""
    fi
echo -d "sudo -u bitnode -i /home/bitnode/bitcoin-0.10.2/bin/bitcoind\nelectrum-server start\nexit 0" > /etc/rc.local
electrum-server start
echo "Done. Good bye."
exit 0
